<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mysql.mapper.SecAccountMapper">
  <resultMap id="BaseResultMap" type="com.example.mysql.model.SecAccountDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="route_id" jdbcType="TINYINT" property="routeId" />
    <result column="account_type" jdbcType="TINYINT" property="accountType" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, route_id, account_type, account_id, `status`, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_sec_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_sec_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.mysql.model.SecAccountDO" useGeneratedKeys="true">
    insert into tb_sec_account (route_id, account_type, account_id, 
      `status`, created_at, updated_at
      )
    values (#{routeId,jdbcType=TINYINT}, #{accountType,jdbcType=TINYINT}, #{accountId,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.mysql.model.SecAccountDO" useGeneratedKeys="true">
    insert into tb_sec_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="routeId != null">
        route_id,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="routeId != null">
        #{routeId,jdbcType=TINYINT},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.mysql.model.SecAccountDO">
    update tb_sec_account
    <set>
      <if test="routeId != null">
        route_id = #{routeId,jdbcType=TINYINT},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.mysql.model.SecAccountDO">
    update tb_sec_account
    set route_id = #{routeId,jdbcType=TINYINT},
      account_type = #{accountType,jdbcType=TINYINT},
      account_id = #{accountId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>