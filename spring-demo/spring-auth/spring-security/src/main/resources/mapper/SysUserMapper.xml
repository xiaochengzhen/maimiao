<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springsecurity.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.example.springsecurity.model.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="head_url" jdbcType="VARCHAR" property="headUrl" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="super_admin" jdbcType="TINYINT" property="superAdmin" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="scope" jdbcType="TINYINT" property="scope" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, `password`, real_name, nick_name, head_url, gender, email, mobile, 
    dept_id, super_admin, `status`, `scope`, deleted, updater, creator, update_time, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.springsecurity.model.SysUser" useGeneratedKeys="true">
    insert into sys_user (username, `password`, real_name, 
      nick_name, head_url, gender, 
      email, mobile, dept_id, 
      super_admin, `status`, `scope`, 
      deleted, updater, creator, 
      update_time, create_time)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{headUrl,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, 
      #{superAdmin,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{scope,jdbcType=TINYINT}, 
      #{deleted,jdbcType=INTEGER}, #{updater,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.springsecurity.model.SysUser" useGeneratedKeys="true">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="headUrl != null">
        head_url,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="superAdmin != null">
        super_admin,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="scope != null">
        `scope`,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headUrl != null">
        #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="superAdmin != null">
        #{superAdmin,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="scope != null">
        #{scope,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springsecurity.model.SysUser">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headUrl != null">
        head_url = #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="superAdmin != null">
        super_admin = #{superAdmin,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="scope != null">
        `scope` = #{scope,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springsecurity.model.SysUser">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      head_url = #{headUrl,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      super_admin = #{superAdmin,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      `scope` = #{scope,jdbcType=TINYINT},
      deleted = #{deleted,jdbcType=INTEGER},
      updater = #{updater,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>